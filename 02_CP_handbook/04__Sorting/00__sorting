Sorting is a fundamental algorithm design problem.


There are many algorithms for sorting, and they are also good examples of
how to apply different algorithm design techniques. The efficient general sorting
algorithms work in O(nlogn) time, and many algorithms that use sorting as a
subroutine also have this time complexity.


**Sorting Theory:
=================
Given an array that contains n elements, your task is to sort the elements in
increasing order.

For example, the array
1 3 8 2 9 2 5 6

will be as follows after sorting:
1 2 2 3 5 6 8 9


There are So many algorithms for sorting some of them are:
1. Bubble Sort
2. Selection Sort
3. Insertion Sort
4. Merge Sort
5. Quick Sort
6. Radix Sort
===========================================================================================

1. Bubble Sort:
Time complexity of Bubble sort is O(n^2).
In bubble sort we perform n-1 iterations for n numbers and with every iteration we move 
the greatest number at its extreme right this element is known as bubble.
With every iteration our problem get reduced by 1 element from right side.

--------------------------------------------------------------------------------------------

2. Selection Sort:

